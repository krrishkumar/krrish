<apex:page controller="Registeration_form" standardStylesheets="false" showHeader="false" docType="html-5.0" cache="false">
   <!--Head Include-->
   <head>
      <c:head_include ></c:head_include>
      <!--     Fonts and icons     -->
      <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css" />
      <meta name="viewport" content="width=device-width" />
   </head>
   <!--Head Close-->
   <!--Custome Style -->
   <style>
    .error-msg{
      color: red;
      list-style-type: none;
      padding: 0px 0 0 0;
      font-size: 11px;
      line-height: 8px;
      }
      .apex-button{
      height: 28px; 
      width: 130px;  
      margin: 0;  
      padding: 5px 0px;
      vertical-align: middle;  
      border: 0;  
      font-size: 13px;  
      font-weight: 400;  
      line-height: 18px;  
      float: left; 
      margin: 4px 10px 8px 0px;
      text-align:center;
      border-radius:3px;
      cursor:pointer;
      }
      .error-msg{
      color: red;
      list-style-type: none;
      padding: 0px 0 0 0;
      font-size: 11px;
      line-height: 8px;
      }
      .pd-10{
      margin-top: 10px;
      }
      .btn-width{
        width:130px;
        margin:10px;
        }
   </style>
   <body>
      <!--Main content section start here-->
      <section>
         <div class="container">
            <div class="title-grid">
               <h3> Registration</h3>
            </div>
            <apex:outputPanel id="ProdTabId1" >
           <apex:messages styleClass="error-msg" />
          </apex:outputPanel>
        <apex:form >
            <div class="row">
               <div class="col-md-12 col-sm-12">
                  <div class="panel panel-default">
                     <div class="panel-body" id="case-title">
                        <div class="text-center">
                           <span class="step"></span>
                           <span class="step"></span>
                           <span class="step"></span>
                           <span class="step"></span>
                        </div>
                        <!--step 1st Start here-->
                        <apex:outputPanel rendered="{!tabIndex==1}">
                        <div class="tab" id="CustomerTab">
                           <h5>Customer Details</h5>
                           <div class="row">
                              <div class="form-row">
                                 <div class="form-group col-md-4">
                                    <label for=""> First Name</label>
                                    <apex:input type="text" value="{!cusfirstname}" html-placeholder="First Name"   styleClass="form-control" />
                                 </div>
                                 <div class="form-group col-md-4">
                                    <label for=""> Last Name</label>
                                    <apex:input type="text" value="{!cuslastname}" html-placeholder="Last Name"   styleClass="form-control" />
                                 </div>
                                 <div class="form-group col-md-4">
                                    <label for="">Company</label>
                                    <apex:input type="text" value="{!cuscompanyname}" html-placeholder="Company Name"   styleClass="form-control" />
                                 </div>
                              </div>
                           </div>
                           <div class="row">
                              <div class="form-row">
                                 <div class="form-group col-md-4">
                                    <label for=""> Email address</label>
                                    <apex:input type="text" value="{!cusemail}" html-placeholder="Email"   styleClass="form-control" />
                                 </div>
                                 <div class="form-group col-md-4">
                                    <label for=""> Phone number</label>
                                    <apex:input type="text" value="{!cusphone}" html-placeholder="Phone Number"   styleClass="form-control" />
                                 </div>
                                 <div class="form-group col-md-4">
                                    <label for="">Mobile number</label>
                                    <apex:input type="text" value="{!cusmobile}" html-placeholder="Mobile Number"   styleClass="form-control" />
                                 </div>
                              </div>
                           </div>
                         
                        </div>
                        </apex:outputPanel>
                        <!--step 1st Start here-->
                        <!--step 2nd Start here-->
                        <apex:outputPanel rendered="{!tabIndex==2}">
                        <div class="tab" id="CustomerTab">
                           <h5>Info</h5>
                           <div class="row">
                              <div class="form-row">
                                 <div class="form-group col-md-4">
                                    <label for="">Instance to novisign</label>
                                    <apex:input type="text" value="{!Instancetonovisign}" html-placeholder=""   styleClass="form-control" />
                                 </div>
                                 <div class="form-group col-md-4">
                                    <label for="">Admin login tool</label>
                                    <apex:input type="text" value="{!adminlogintool}" html-placeholder=""   styleClass="form-control" />
                                 </div>
                                 <div class="form-group col-md-4">
                                    <label for="">Number of licenses to be activated</label>
                                    <apex:input type="text" value="{!nooflincences}" html-placeholder=""   styleClass="form-control" />
                                 </div>
                              </div>
                           </div>
                           <div class="row">
                              <div class="form-row">
                                 <div class="form-group col-md-4">
                                    <label for="">For each license to be activated we need</label>
                                    <apex:input type="text" value="{!foreachlincenses}" html-placeholder=""   styleClass="form-control" />
                                 </div>
                                 <div class="form-group col-md-4">
                                    <label for="">Philips model number</label>
                                    <apex:input type="text" value="{!philipsmodel}" html-placeholder=""   styleClass="form-control" />
                                 </div>
                                 <div class="form-group col-md-4">
                                    <label for="">Serial number</label>
                                    <apex:input type="text" value="{!serialnumber}" html-placeholder=""   styleClass="form-control" />
                                 </div>
                              </div>
                           </div>
                        </div>
                        </apex:outputPanel>
                        <!--step 2nd Start here-->
                        <!--step 3rd Start here-->
                        <apex:outputPanel rendered="{!tabIndex==3}" >
                        <div class="tab" id="CustomerTab">
                           <h5>User Information</h5>
                           <div class="row">
                              <div class="form-row">
                                 <div class="form-group col-md-4">
                                    <label for=""> First Name</label>
                                    <apex:input type="text" value="{!firstnameseller}" html-placeholder=""   styleClass="form-control" />
                                 </div>
                                 <div class="form-group col-md-4">
                                    <label for=""> Last Name</label>
                                    <apex:input type="text" value="{!Lastnamereseller}" html-placeholder=""   styleClass="form-control" />
                                 </div>
                                 <div class="form-group col-md-4">
                                    <label for="">Email address</label>
                                    <apex:input type="text" value="{!emailresller}" html-placeholder=""   styleClass="form-control" />
                                 </div>
                              </div>
                           </div>
                           <div class="row">
                              <div class="form-row">
                                 <div class="form-group col-md-4">
                                    <label for="">Phone Number</label>
                                    <apex:input type="text" value="{!phoneresller}" html-placeholder=""   styleClass="form-control" />
                                 </div>
                                 <div class="form-group col-md-4">
                                    <label for="">Mobile Number</label>
                                    <apex:input type="text" value="{!mobileseller}" html-placeholder=""   styleClass="form-control" />
                                 </div>
                                 <div class="form-group col-md-4">
                                    <label for="">Date of purchase</label>
                                    <apex:input type="date" styleClass="form-control" value="{!dateofpurchase}"/> 
                                 </div>
                              </div>
                           </div>
                        </div>
                        </apex:outputPanel>
                        <!--step 3rd end here-->
                        <!--step 4th Start here-->
                        <apex:outputPanel rendered="{!tabIndex==4}"> 
                        <div class="tab" id="CustomerTab">
                           <h5>Product Information</h5>
                           <div class="row">
                            <div class="col-md-12">
                              <table class="table table-bordered case-summary-table">
                                <tr style="background: #eee; text-align: left;  font-weight: bold;">
                                <td class="col-md-1">&nbsp;</td>
                                <td class="col-md-3">Product Family</td>
                                <td class="col-md-3">Product Type</td>
                                <td class="col-md-2">Purchase Date/Time</td>
                               </tr>

                                <!--<tbody>-->
                                <apex:variable var="count" value="{!0}"/>
                                <apex:repeat value="{!allProductList}" var="apList" id="TABLIST">
                                    <tr>
                                        <td>
                                          <apex:inputCheckbox id="myCheck"  style="margin: 11px 0px 0px 15px;">
                                             <apex:actionSupport reRender="none" event="onclick" action="{!checkFunction}">
                                                 <apex:param name="checkboxcheck" value="{!count}"/>
                                             </apex:actionSupport>
                                          </apex:inputCheckbox>
                                        </td>
                                                     <td>         
                                                        <apex:selectList id="hav7" value="{!apList.selectedproductFamily}" size="1" multiselect="false" styleClass="form-control"  >
                                                            <apex:selectOptions value="{!apList.productFamily}"  >
                                                            </apex:selectOptions>
                                                            <apex:actionSupport event="onchange" action="{!WrapProductlist}" reRender="i12">
                                                               <apex:param name="windex" value="{!count}" assignTo="{!wrapIndex}"/>
                                                            </apex:actionSupport>
                                                         </apex:selectList>
                                                      </td>
                                                        <td>
                                                         <apex:outputPanel id="i12">
                                                            <apex:selectList value="{!apList.selectedProd}" size="1" multiselect="false" styleClass="form-control">
                                                               <apex:selectOptions id="oppid" value="{!apList.product}"  />
                                                            </apex:selectList>
                                                         </apex:outputPanel>
                                                      </td>
                                                      <td><apex:input type="datetime-local" value="{!apList.productInfodate}" styleClass="form-control" /></td>
                                                   </tr>
                                <apex:variable value="{!count+1}" var="count"/>
                                 </apex:repeat>
                               <!-- </tbody>-->
                              </table>
                              <div class="form-row form-group" style="float:right;">
                         <apex:outputPanel styleClass="cursor">
                            <div class="apex-button btn-info"><i class="fa fa fa-plus" aria-hidden="true" style="margin-right:5px;"></i>Add More </div>
                            <apex:actionSupport event="onclick" action="{!addproductrow}" reRender="ProdTabId"/>
                         </apex:outputPanel>
                         <apex:outputPanel styleClass="cursor">
                            <div class="apex-button btn-danger"><i class="fa fa-trash" aria-hidden="true" style="margin-right:5px;"></i>Delete</div>
                            <apex:actionSupport event="onclick" action="{!DelProductRow}" reRender="ProdTabId"/>
                         </apex:outputPanel>
                      </div>
                              
                              </div>
                           </div>
                        </div>
                        </apex:outputPanel>
                        <!--step 4th end here-->        
                    
                     </div>
                     
                     <div class="panel-footer text-right">
                     
                              <apex:commandButton value="Pervious" action="{!previous}" styleClass="action-button btn-info btn-width"  rendered="{!OR(tabIndex==2,tabIndex==3,tabIndex==4)}"/>
                              <apex:commandButton value="Next" action="{!next}" styleClass="action-button btn-primary btn-width"  rendered="{!OR(tabIndex==1,tabIndex==2,tabIndex==3)}" />
                              <apex:commandButton value="Submit" action="{!submit}" styleClass="action-button btn-primary btn-width" rendered="{!tabIndex==4}"/>
                     </div>
                  </div>
               </div>
            </div>
        </apex:form>
         </div>
      </section>
      
       <script>
            var showNextTab = 0;
               var currentTab = 0; // Current tab is set to be the first tab (0)
               showTab(currentTab); // Display the crurrent tab
               
               function showTab(n) {
               // This function will display the specified tab of the form...
               var x = document.getElementsByClassName("tab");
               console.log('tab x========='+JSON.stringify(x));
               x[n].style.display = "block";
               //... and fix the Previous/Next buttons:
               if (n == 0) {
                document.getElementById("prevBtn").style.display = "none";
               } else {
                document.getElementById("prevBtn").style.display = "inline";
               }
               if (n == (x.length - 1)) {
                document.getElementById("nextBtn").style.display = "none";
                document.getElementById("submitBtn").style.display = "inline";
               } else {
                document.getElementById("nextBtn").style.display = "inline";
                document.getElementById("submitBtn").style.display = "none";
               }
               //... and run a function that will display the correct step indicator:
               console.log('n========='+n);
               fixStepIndicator(n)
                   {
                   // This function removes the "active" class of all steps...
                   var i, x = document.getElementsByClassName("step");
                   for (i = 0; i < x.length; i++) {
                   x[i].className = x[i].className.replace(" active", " active");
                   }
                   //... and adds the "active" class on the current step:
                   x[n].className += " ";
                   
                   }
               }
            
               function fixStepIndicator(n) {
               // This function removes the "active" class of all steps...
               var i, x = document.getElementsByClassName("step");
               for (i = 0; i < x.length; i++) {
               x[i].className = x[i].className.replace(" active", " active");
               }
               //... and adds the "active" class on the current step:
               x[n].className += " active";
               
               }
               
               function showNext(n){
               if(n== -1){
               showNextTab =showNextTab -1;
               
               }
                   // This function will figure out which tab to display
               var x = document.getElementsByClassName("tab");
               // Exit the function if any field in the current tab is invalid:
               //if (n == 1 && !validateForm()) return false;
               // Hide the current tab:
               x[currentTab].style.display = "none";
               // Increase or decrease the current tab by 1:
               currentTab = currentTab + n;
               // if you have reached the end of the form...
               if (currentTab >= x.length) {
                // ... the form gets submitted:
                document.getElementById("doa").submit();
                return false;
               }
               // Otherwise, display the correct tab:
               showTab(currentTab);
                          document.getElementById("myText").innerHTML = " ";
            
               }
         </script>
         <script>
            function doSubmit(){
            <!--This method call the PageReference method via actionFunction HAVING name CallApexMethod-->               
                   CallApexMethod();              
            }
            
         </script>
      
      
      <!--Main content section end here-->
      <!--Footer Section start here-->
      <section>
         <footer class="container-fluid text-center">
         </footer>
      </section>
      <!--close footer section-->
      
   </body>
</apex:page>
*********************************************************APEX CONTROLLER************************************
public class Registeration_form {

    public String cusfirstname {
        get;
        set;
    }
    public String cuslastname {
        get;
        set;
    }
    public String cuscompanyname {
        get;
        set;
    }
    public String cusemail {
        get;
        set;
    }
    public String cusphone {
        get;
        set;
    }
    public String cusmobile {
        get;
        set;
    }
    public String Instancetonovisign {
        get;
        set;
    }
    public String adminlogintool {
        get;
        set;
    }
    public integer nooflincences {
        get;
        set;
    }
    public String foreachlincenses {
        get;
        set;
    }
    public String philipsmodel {
        get;
        set;
    }
    public String serialnumber {
        get;
        set;
    }
    public String firstnameseller {
        get;
        set;
    }
    public String Lastnamereseller {
        get;
        set;
    }
    public String emailresller {
        get;
        set;
    }
    public String phoneresller {
        get;
        set;
    }
    public string mobileseller {
        get;
        set;
    }
    public Date dateofpurchase {
        get;
        set;
    }
   
    public Set < Integer > selectcheckbox;
   
   
    public integer tabIndex {
        get;
        set;
    }
    //variable declaration for Prouct Info
    public list < selectOption > selectProductList {
        get;
        set;
    }
    
     public string selectProduct {
        get;
        set;
    }
     public list < selectOption > selectProdList {
        get;
        set;
    }
    
     public string selectedProd {
        get;
        set;
    }
    
    public list < selectOption > ProductFamilyList {
        get;
        set;
    }
     public string ProductFamily {
        get;
        set;
    }
    
     public Integer wrapIndex {
        get;
        set;
    }
    
     public list < allProducts > allProductList {
        get;
        set;
    }
    
     public Integer wquant2 {
        get;
        set;
    }
   

   //constructor called
    public Registeration_form() {
        tabIndex = 1;
        allProductList = new list <allProducts>();
        selectcheckbox = new Set <Integer>();
        addproductrow();

    }
    
    
    
    public void submit() {
    
        system.debug('emailresller');
        account acc = new account();
        acc.Name = cuscompanyname;
        system.debug('nxnaxj' + cuscompanyname);
        insert acc;
        system.debug('acc' + acc);
        Contact con = new Contact();
        con.FirstName = cusfirstname;
        con.LastName = cuslastname;
        con.Email = cusemail;
        con.Phone = cusphone;
        con.MobilePhone = cusmobile;
        con.Instance_to_Novisign__c = Instancetonovisign;
        con.Admin_login_tool__c = adminlogintool;
        con.Number_of_licenses_to_be_activated__c = nooflincences;
        con.For_each_license_to_be_activated_we_n__c = foreachlincenses;
        con.Philips_Model_Number__c = philipsmodel;
        con.Serial_Number__c = serialnumber;
        con.First_NameReseller__c = firstnameseller;
        con.Last_NameReseller__c = Lastnamereseller;
        con.E_mailreseller_c__c = emailresller;
        con.PhoneReseller__c = phoneresller;
        con.Mobile__c = mobileseller;
        con.Date_of_PurchaseReseller__c = dateofpurchase;
        con.AccountId = acc.Id;
        insert con;
        system.debug('conrtact' + con);
        
        
        List<Opportunity> oppor = new List<Opportunity>();
        Opportunity oppo = new  Opportunity();
        oppo.Name = cuscompanyname;
        oppo.CloseDate = system.today();
        oppo.StageName = 'Qualification';
        oppo.AccountId = acc.id;
        oppor.add(oppo);
        insert oppo;
        
          pricebook2 pb = [select Id from pricebook2 where IsStandard = TRUE][0];
          Id pricebookId = pb.Id;
          
          List<PricebookEntry> pelist = new List<PricebookEntry>();
         // Map < PricebookEntry, Date > map1 = new Map < PricebookEntry, Date > ();
          List < OpportunityLineItem > oli = new List < OpportunityLineItem > ();
        
        
        for(allProducts allp :allProductList){
        
        system.debug('allp======='+allp);
        
         if (allp.selectedproductFamily != null && allp.selectedproductFamily != ''){
               system.debug('selectedproductFamily====='+allp.selectedproductFamily);
         
          for (Product2 p2: [select id, Name, Family from Product2 where Name =: allp.selectedProd]) {
          
                        system.debug('p2========='+p2);
                        system.debug('p2*****' + p2.id);
                        for (PricebookEntry pb1: [Select id, Product2Id, Pricebook2Id, UnitPrice from PricebookEntry where Pricebook2Id =: pricebookId and Product2Id =: p2.id]) {
                           // map1.put(pb1, allp.productInfodate);
                            pelist.add(pb1);
                            system.debug('pelist===='+pelist);
                            
                        }

                    }
         
         }
         
         else{
         system.debug('else==product family');
          ApexPages.addmessage(new ApexPages.message(ApexPages.severity.WARNING, 'Please Select Product Family:'));
         
         }
        
        
        }
        
        
         for (PricebookEntry ppe: pelist ) {
                 system.debug('ppe===='+ppe);
                OpportunityLineItem oppli = new OpportunityLineItem();
                oppli.OpportunityId = oppo.id;
                oppli.PricebookEntryId = ppe.id;
                oppli.Quantity = 1.0;
                oppli.TotalPrice = ppe.UnitPrice * oppli.Quantity;
                oli.add(oppli);

            }
            
            if(oli.size()>0 && oppor.size()>0){
            system.debug('oli==========');
            try{
                 insert oli;
            }
           catch(Exception e){
           system.debug('exception==='+e);
           
           }
            
            }
     
        
    }
    
    
    
      // Added for populating the product family dynamically into the picklist.
    public list < SelectOption > ProdFamilyList() {
        ProductFamilyList = new List <selectOption> ();
        ProductFamilyList.add(new SelectOption('', 'Please Select'));
        Schema.DescribeFieldResult fieldResult3111 = Product2.Family.getDescribe();
        List < Schema.PicklistEntry > cou3111 = fieldResult3111.getPicklistValues();
        for (Schema.PicklistEntry f: cou3111) {
            ProductFamilyList.add(new SelectOption(f.getLabel(), f.getValue()));
        }
        return ProductFamilyList;
    }

    //Use of Wrapper class
    public class allProducts {

        public list < selectOption > productFamily {
            get;
            set;
        }
        public list < selectOption > product {
            get;
            set;
        }
        public Integer quantity {
            get;
            set;
        }
        public String selectedproductFamily {
            get;
            set;
        }
        public String selectedProd {
            get;
            set;
        }
        public integer WrapperIndex {
            get;
            set;
        }
        public DateTime productInfodate {
            get;
            set;
      }
       public string productInfoquantity {
            get;
            set;
        }


        //Constructor of Wrapper class
        public allProducts() {
            productInfodate = system.now();

        }
    }
    public void checkFunction() {
        string pp = apexpages.currentpage().getparameters().get('checkboxcheck');
        selectcheckbox.add(Integer.valueof(pp));
    }

    //this method populate the product info  on the basis of selected Product Family
    public void WrapProductlist() {
        string pp = apexpages.currentpage().getparameters().get('windex');
        allProductList[wrapIndex].product = getListProduct();

    }
    public void Wrapuantity() {
        allProductList[wrapIndex].quantity = wquant2;
    }

    Public list < SelectOption > getListProduct() {


        selectProductList = new List <selectOption> ();
        if (allProductList[wrapIndex].selectedproductFamily != '') {
            for (Product2 p2: [select id, Name, Family from Product2 where Family =: allProductList[wrapIndex].selectedproductFamily]) {
                selectProductList.add(new SelectOption(p2.name, p2.name));

            }
        }
        return selectProductList;
    }
    
    
    
     public void DelProductRow() {
        Integer k = allProductList.size();
        for (Integer i = k - 1; i > 0; i--) {
            if (selectcheckbox.contains(i)) {
                allProductList.remove(i);
                selectcheckbox.remove(i);
            }
        }
    }
     // Method for addProduct Info row
    public void addproductrow() {
        //system.debug('=========add product row=====');
        allProducts ap = new allProducts();
        ap.productFamily = ProdFamilyList();
        allProductList.add(ap);
    }

    public void previous() {
    
        tabIndex = tabIndex - 1;
        
    }
    public void next() {
    
        if (cusfirstname != null && cusfirstname != '' && cuslastname != null && cuslastname != '' && cuscompanyname != null && cuscompanyname != '' && cusemail != null && cusemail != '' && cusmobile != null && cusmobile != '' && cusphone != null && cusphone != ''  && tabIndex == 1) {
            tabIndex = tabIndex + 1;
            system.debug(tabIndex);
        } else if (Instancetonovisign != null && Instancetonovisign != '' && adminlogintool != null && adminlogintool != '' && nooflincences != null && foreachlincenses != null && foreachlincenses != '' && philipsmodel != null && philipsmodel != '' && serialnumber != null && serialnumber != '' && tabIndex == 2) {
            tabIndex = tabIndex + 1;
        }
        else if(firstnameseller !=null && firstnameseller!= '' && Lastnamereseller !=null && Lastnamereseller != '' && emailresller !=null && emailresller!= '' && phoneresller !=null && phoneresller!= '' && mobileseller !=null && mobileseller!= ''  && dateofpurchase !=null && tabIndex == 3 ){
             tabIndex = tabIndex + 1;
                }
        
         else {
            ApexPages.addmessage(new ApexPages.message(ApexPages.severity.WARNING, 'Please fill required fields:'));
        }
    }
}
